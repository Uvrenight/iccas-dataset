# Fetch new report(s) and update files in the data folder.
# Push all changes to a secondary branch and open a pull-request.
name: Update data
on:
  schedule:
    # cron syntax: <minute> <hour> <day-of-the-year> <month> <day-of-the-week>
    - cron: '0 18 * * 5'    # run each friday at 18:00

  workflow_dispatch:        # trigger a run manually from GitHub

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run:  echo "PR_BRANCH=auto-update-$( date -I )" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      # TODO: cache dependencies.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi

      - name: Download the new report and update datasets
        run: python src/update_data.py

      # If no new report was published, "git commit" will fail because no file has changed
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/
          git commit -m "Auto-update data"

      - name: Push changes to a new branch
        uses: ad-m/github-push-action@master
        with:
          branch: "${{ env.PR_BRANCH }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a pull request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "${{ env.PR_BRANCH }}"
          pr_title: Auto-update data
          pr_body: This PR was automatically created by a GitHub Action.
          pr_allow_empty: false
          github_token: ${{ secrets.GITHUB_TOKEN }}
